version: 2.1
# create the infrastructure
# Configure the infrastructure using ansible playbook

orbs:
  # Choose either one of the obrs below
  # welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@2.0.3

commands:
  # Rollback
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable
          # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}


# Define the jobs we want to run as build
jobs:
  # Rollback Exercise
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command:  |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
              --region us-west-2
      # Fail the job intentionally to simulate an error.
      # Uncomment the line below if you want to fail the current step
      - run: return 1
      - destroy_environment

  # Exercise config and Deployment
  #configure_infrastructure:
  #  docker:
  #    - image: python:3.7-alpine3.11
  #  steps:
  #    - checkout
  #    - add_ssh_keys:
  #        fingerprints: ["8b:c3:7a:2e:d0:a6:a4:1a:47:57:f8:84:14:04:d7:4f"]
  #    - run:
  #        name: Install dependencies
  #        command: |
  #          # install the dependencies needed for your playbook
  #          apk add --update ansible
  #    - run:
  #        name: Configure server
  #        command: |
  #          ansible-playbook -i inventory.txt main.yml

  # Creating a smoke Testing Job
  #smoke_test:
  #  docker:
  #    - image: alpine:latest
  #  steps:
  #    - run: apk add --update curl
  #    - run:
  #        name: smoke test
  #        command: |
  #          URL="https://blog.u333dacity.com/"
  #          # Test if the website exits
  #          if curl -s --head ${URL}
  #          then
  #            return 0
  #          else
  #            return 1
  #          fi

  # Exercise: Smoke Testing
  # Make it to fail
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run:
          name: Test job
          # Fail the job intentionally to simulate error
          command: return 1
      - destroy_environment

workflows:
  my_workflow:
    jobs:
      - create_infrastructure
     # - configure_infrastructure
      - smoke_test